name: Simple Pipeline

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo apt-get install -y kubectl maven
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.8.3 bash
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          sudo usermod -aG docker $USER
          newgrp docker

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Create cluster
        run: |
          k3d cluster create ci \
            --port "8080:30080@loadbalancer" \
            --wait
          mkdir -p $HOME/.kube
          k3d kubeconfig get ci > $HOME/.kube/config
          kubectl cluster-info

      - name: Build services
        run: |
          services=(api-gateway auth-service inventory-service notification-service order-service product-service user-service)
          for service in "${services[@]}"; do
            echo "Building $service..."
            cd $service
            mvn clean package -DskipTests
            cd ..
          done

      - name: Build and import Docker images
        run: |
          services=(api-gateway auth-service inventory-service notification-service order-service product-service user-service)
          for service in "${services[@]}"; do
            echo "Building Docker image for $service..."
            docker build -t $service ./$service
            k3d image import $service -c ci
          done
          k3d image list -c ci

      - name: Deploy with Helm
        run: |
          cd helm-chart
          helm dependency update
          helm lint .
          helm upgrade --install app . \
            --namespace default \
            --create-namespace \
            --atomic \
            --timeout 30m \
            --wait \
            --wait-for-jobs \
            --debug
          kubectl wait --for=condition=available deployment/api-gateway-deployment --timeout=600s -n default

      - name: Verify deployment
        run: |
          kubectl get pods,svc,deploy -n default -o wide
          helm status app -n default
          kubectl logs -n default -l app=api-gateway --tail=100
